# Generated by Django 5.0.6 on 2024-09-21 15:54

import ad.models
import django.core.validators
import django.db.models.deletion
import mptt.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='ad.category', verbose_name='Родитель')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=150, null=True, verbose_name="Document'stitle")),
                ('created', models.DateTimeField(auto_now=True)),
                ('changed', models.DateTimeField(auto_now_add=True)),
                ('moderation', models.BooleanField(default=False, verbose_name='Модерация')),
                ('archived', models.BooleanField(default=False, verbose_name='Архивное')),
                ('by_mileage', models.CharField(choices=[('ALL', 'ALL'), ('NEW', 'NEW'), ('WM', 'With Mileage')], verbose_name='Differ by mileage')),
                ('brand', models.CharField(max_length=100, verbose_name='brand')),
                ('model', models.CharField(max_length=100, verbose_name='model')),
                ('price', models.CharField(max_length=100, verbose_name='price')),
                ('year', models.IntegerField(default=2024, validators=[django.core.validators.MinValueValidator(1984), ad.models.max_value_current_year], verbose_name='year')),
                ('mileage', models.IntegerField()),
                ('transmission', models.CharField(blank=True, choices=[('A', 'AUTO'), ('R', 'ROBOT'), ('V', 'VARIATOR'), ('M', 'MECHANICAL')], null=True, verbose_name='Differ by transmission')),
                ('by_wheel_drive', models.CharField(blank=True, choices=[('FWD', 'FRONT_WHEEL_DRIVE'), ('RWD', 'REAR_WHEEL_DRIVE'), ('4WD', 'VARIATOR')], null=True, verbose_name='Differ by wheel drive')),
                ('engine_capacity', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000)], verbose_name='engine capacity')),
                ('engine_power', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(900)], verbose_name='engine power in horse power')),
                ('fuel_consumption', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(40)], verbose_name='fuel consumption per 100 km')),
                ('location', models.CharField(blank=True, max_length=160, null=True, verbose_name='location')),
                ('type', models.CharField(blank=True, choices=[('SD', 'SEDAN'), ('UN', 'UNIVERSAL'), ('OR', 'OFF_ROAD'), ('HTB', 'HATCHBACK')], null=True, verbose_name='Differ by type')),
                ('colour', models.CharField(blank=True, choices=[('BLACK', 'BLACK'), ('WHITE', 'WHITE'), ('GREEN', 'GREEN'), ('GREY', 'GREY'), ('RED', 'RED'), ('ORANGE', 'ORANGE'), ('BEIGE', 'BEIGE'), ('BROWN', 'BROWN')], null=True, verbose_name='Differ by colour')),
                ('fuel', models.CharField(blank=True, choices=[('PTR', 'PETROL'), ('GAS', 'GAS'), ('HYBRID', 'HYBRID'), ('ELECTRIC', 'ELECTRIC'), ('DIESEL', 'DIESEL')], null=True, verbose_name='Differ by fuel')),
                ('add_parametres', models.CharField(blank=True, max_length=150, null=True, verbose_name='additional')),
                ('description', models.CharField(max_length=2000, verbose_name='Description')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('category', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='car', to='ad.category')),
            ],
            options={
                'verbose_name': 'Automobile',
                'verbose_name_plural': 'Automobiles',
            },
        ),
        migrations.CreateModel(
            name='BagsKnapsacks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=150, null=True, verbose_name="Document'stitle")),
                ('created', models.DateTimeField(auto_now=True)),
                ('changed', models.DateTimeField(auto_now_add=True)),
                ('moderation', models.BooleanField(default=False, verbose_name='Модерация')),
                ('archived', models.BooleanField(default=False, verbose_name='Архивное')),
                ('price', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000000000)], verbose_name='price')),
                ('description', models.CharField(max_length=2000, verbose_name='Description')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('category', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bagsknapsacks', to='ad.category')),
            ],
            options={
                'verbose_name': 'Bags&Knapsacks',
                'verbose_name_plural': 'Bags&Knapsacks',
            },
        ),
        migrations.CreateModel(
            name='ChildClothesShoes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=150, null=True, verbose_name="Document'stitle")),
                ('created', models.DateTimeField(auto_now=True)),
                ('changed', models.DateTimeField(auto_now_add=True)),
                ('moderation', models.BooleanField(default=False, verbose_name='Модерация')),
                ('archived', models.BooleanField(default=False, verbose_name='Архивное')),
                ('price', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000000000)], verbose_name='price')),
                ('description', models.CharField(max_length=2000, verbose_name='Description')),
                ('object_id', models.PositiveIntegerField()),
                ('category', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='childclothesshoes', to='ad.category')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': "Child's Clothes&Shoes",
                'verbose_name_plural': "Child's Clothes&Shoes",
            },
        ),
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=150, null=True, verbose_name="Document'stitle")),
                ('document', models.FileField(upload_to='media/documents', verbose_name="Document's title")),
                ('created', models.DateTimeField(auto_now=True)),
                ('auto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ad.car')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_favorited', models.BooleanField()),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=150, null=True, verbose_name="Photoe's title")),
                ('image', models.ImageField(upload_to='images', verbose_name='Photo')),
                ('created', models.DateTimeField(auto_now=True)),
                ('changed', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='users.profile')),
            ],
        ),
        migrations.CreateModel(
            name='IP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=100)),
                ('auto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ad.car')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_liked', models.BooleanField()),
                ('created', models.DateTimeField(auto_now=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MenClothes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=150, null=True, verbose_name="Document'stitle")),
                ('created', models.DateTimeField(auto_now=True)),
                ('changed', models.DateTimeField(auto_now_add=True)),
                ('moderation', models.BooleanField(default=False, verbose_name='Модерация')),
                ('archived', models.BooleanField(default=False, verbose_name='Архивное')),
                ('price', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000000000)], verbose_name='price')),
                ('description', models.CharField(max_length=2000, verbose_name='Description')),
                ('size', models.CharField(choices=[('XS—40/42', 'особо маленький - extra small'), ('S — 44/46', 'маленький - small'), ('(M—48/50', 'средний - medium'), ('L— 52/54', 'большой - large'), ('XL—56/58', 'особо большой — extra large'), ('XXL— 60/62', ' особо особо большой— extra-extra large'), ('3XL—64/66', 'особо особо особо большой— extra-extra-extra large')])),
                ('object_id', models.PositiveIntegerField()),
                ('category', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menclothes', to='ad.category')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Men Clothes',
                'verbose_name_plural': 'Men Clothes',
            },
        ),
        migrations.CreateModel(
            name='MenShoes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=150, null=True, verbose_name="Document'stitle")),
                ('created', models.DateTimeField(auto_now=True)),
                ('changed', models.DateTimeField(auto_now_add=True)),
                ('moderation', models.BooleanField(default=False, verbose_name='Модерация')),
                ('archived', models.BooleanField(default=False, verbose_name='Архивное')),
                ('price', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000000000)], verbose_name='price')),
                ('description', models.CharField(max_length=2000, verbose_name='Description')),
                ('object_id', models.PositiveIntegerField()),
                ('category', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menshoes', to='ad.category')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Men Shoes',
                'verbose_name_plural': 'Men Shoes',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now=True)),
                ('changed', models.DateTimeField(auto_now_add=True)),
                ('time_paied', models.DateTimeField()),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Views',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='view', to='users.profile')),
            ],
        ),
        migrations.CreateModel(
            name='WemenClothes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=150, null=True, verbose_name="Document'stitle")),
                ('created', models.DateTimeField(auto_now=True)),
                ('changed', models.DateTimeField(auto_now_add=True)),
                ('moderation', models.BooleanField(default=False, verbose_name='Модерация')),
                ('archived', models.BooleanField(default=False, verbose_name='Архивное')),
                ('price', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000000000)], verbose_name='price')),
                ('description', models.CharField(max_length=2000, verbose_name='Description')),
                ('object_id', models.PositiveIntegerField()),
                ('category', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wemenclothes', to='ad.category')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Women Clothes',
                'verbose_name_plural': 'Women Clothes',
            },
        ),
        migrations.CreateModel(
            name='WemenShoes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=150, null=True, verbose_name="Document'stitle")),
                ('created', models.DateTimeField(auto_now=True)),
                ('changed', models.DateTimeField(auto_now_add=True)),
                ('moderation', models.BooleanField(default=False, verbose_name='Модерация')),
                ('archived', models.BooleanField(default=False, verbose_name='Архивное')),
                ('price', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000000000)], verbose_name='price')),
                ('description', models.CharField(max_length=2000, verbose_name='Description')),
                ('object_id', models.PositiveIntegerField()),
                ('category', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wemenshoes', to='ad.category')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Women Shoes',
                'verbose_name_plural': 'Women Shoes',
            },
        ),
    ]
